
begin{quote}
Joseph Campbell popularized the notion of an archetypal journey that recurs in the mythologies and religions of cultures around the world. From Moses and the burning bush to Luke Skywalker meeting Obi wan Kenobi, the journey always begins with a hero who hears a calling to a quest...
\\
The hero’s journey is an apt way to think of startups. All new companies and new products begin with an almost mythological vision— a hope of what could be, with a goal few others can see...
\\
Most entrepreneurs feel their journey is unique. Yet what Campbell perceived about the mythological hero’s journey is true of startups as well: However dissimilar the stories may be in detail, their outline is always the same. ---Steve Blank, The Four Steps to Epiphany %\cite{Blank2013}
end{quote}

in between

begin{quote}
A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over, beginning with a working simple system. ---John Gall, The Systems Bible %\cite{Gall2012}
end{quote}

One of the most important and distinguishing features of this book is its "emergence model." In keeping with the entrepreneurial spirit of works like Ries' {\itshape The Lean Startup}, the book adopts a progressive, evolutionary approach. The student's journey through it reflects a process of emergence. Such processes are often associated with founding and scaling a startup. There are many helpful books on this topic, such as:

\begin{itemize}
\item \href{http://www.amazon.com/Nail-then-Scale-Entrepreneurs-Breakthrough/dp/0983723605}{Nail it then scale it} by Furr and Ahlstrom
\item \href{http://www.amazon.com/Scaling-Up-Companies-Rockefeller-Habits-ebook/dp/B00O5RR7QO/}{Scaling Up} by Harnish
\item \href{http://www.amazon.com/Startup-CEO-Scaling-Business-Website/dp/1118548361[_Startup CEO_]}{Startup CEO} by Blumberg
\item \href{http://www.amazon.com/The-Lean-Startup-Entrepreneurs-Continuous/dp/0307887898/ref=pd_bxgy_14_img_y}{The Lean Startup} by Ries
\end

The emergence model and overall book structure is discussed in depth in the main introduction. Here are some notes on the thought process. I have spent considerable time thinking (agonizing) about the correct ordering of the chapters within these sections. This is possibly the tenth or twelfth version of the chapter ordering. This is an area where I want critical review, but also have strong opinions.

There is benefit to restricting the chapters to 12, as a typical semester runs 14 weeks and the book then fits quite nicely, with one chapter per class and allowing for an introductory session and final exam. (Trying to modfiy the semester system is out of scope for this project.) Of course, a two-semester series, with 2 weeks per chapter, would also work well; each half of the book is also a logical unit.

The governing thought experiment is, "what would I turn my attention to next as my IT-based concerns scale up?" For example, I think work management (implying rudimentary workflow, e.g. Kanban) correctly comes before formalized project management, and project management comes before fully formalized process management (including frameworks such as CMMI, COBIT and ITIL).

Note that this would be a testable and falsifiable theory, if empirical research were done to inventory and characterize organization scaling patterns. If we found (for example) that a majority of organizations formalize governance, risk, security and compliance practices before formalizing project management, that would indicate that those chapters should be re-ordered.

(In my experience, small/medium businesses may have some formal IT project management capability but security & GRC are still tacit, not formalized. This does not mean security is not a concern, but they have not yet hired a CISO, nor instituted formal controls).

The presence of Product Management at an early stage is intended to provoke. Product management is poorly addressed in most current CSci/MIS/IT education, as well as the reigning industry standards. Yet formalizing it is one of the earliest concerns for a startup, and the imperatives of the product vision drive all that comes after.

Evidence to this effect is seen (as of 2015) at the University of California at Berkeley I-School, which has replaced its Project Management course with \href{http://www.ischool.berkeley.edu/courses/i290m-lapm}{Lean/Agile Product Management}, taught currently by the esteemed Jez Humble.

Also, you may notice that *the chapter titles don't necessarily reflect "Agile" terminology*. This is also deliberate, as students are going into a diverse world of much long-established IT. Furthermore, putting "Agile" as a qualifier on each chapter seems gratuitous (e.g. "Agile Operations Management" instead of just "Operations Management.")

The first word of the book's title is "Agile." That declares the orientation, and the proof will be in the reading. My intent is to involve experienced Agile practitioners in contributing to the sections most relevant to them, and I anticipate a high quality end result that is recognizably supportive of the Agile movement's goals and ambitions.

The book however is not a complete dismissal of older models of IT delivery. Wherever possible, Agile is presented as an evolutionary step relative to what has gone before. The specifics of "what's different" are identified, in the interest of de-mystifying what can be a fraught and quasi-religious topic. In the words of Don Reinertsen, you can have "faith based Agile or science based Agile." This book is strictly interested in the latter. Pointers to relevant theory are included, although this is NOT a theoretical text. That may come later.

This emergence model can also be understood as an individual's progression within a larger enterprise. Even if one starts from Day 1 at a Fortune 100 corporation, I believe the progression of one's understanding still progresses through individual, to team, to "team of teams," to enterprise. Of course, one may cease evolving one's understanding at any of these stages, with corresponding implications for one's career.

Some of you may be familiar with the idea of a Minimum Viable Product, Minimum Marketable Release, or similar. In these terms, it is important to understand that each of the four parts of the book represents an MVP, but not each chapter. One can't begin to deliver IT value without the components discussed in each of Chapters 1-3. The chapters of each section tend to be interdependent, in other words.

Structure within the structure: Each chapter flows in a roughly "top-down" fashion:

\begin{enumerate}
\item "Business" concerns (value, motivation)
\item "Process" concerns (execution, flow)
\item Lean, Agile, and DevOps perspectives as appropriate
\item "System" concerns (information & automation)
\end{enumerate}

This book does not cover specific technologies in any depth. Many examples are used, but carefully framed to not require previous expertise. This is about broader, longer-lifecycle trends.
