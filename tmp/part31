\subsection{Topics in IT infrastructure}
\label{_topics_in_it_infrastructure}\hyperlabel{_topics_in_it_infrastructure}%
  
This and following chapters in this book will end with a "topics" section, in which current and specialized developments will be discussed.
 
\label{commit-as-metadata}\hyperlabel{commit-as-metadata}
 
\subsubsection{Configuration management, version control, and metadata}
\label{_configuration_management_version_control_and_metadata}\hyperlabel{_configuration_management_version_control_and_metadata}%
  
Version control, in particular source control, is where we start to see the emergence of an \emph{architecture of IT management}. It is in the source control system that we first start to see \emph{metadata} emerge as an independent concern. Metadata is a tricky term, that tends to generate confusion. The term \textquotedblleft{}meta\textquotedblright{} implies a concept that is somehow self-{}referential, and/or operating at a higher level of abstraction. So,
 \begin{itemize}

\item{} the term meta-{}discussion is a discussion about the discussion;
 

\item{} meta-{}cognition is cognition about cognition, and
 

\item{} meta-{}data (aka metadata) is data about data.
 
\end{itemize}
 
Some examples:
 \begin{itemize}

\item{} In traditional data management, metadata is the description of the data structures, especially from a business point of view. A database column might be named \textquotedblleft{}CUST\_L\_NM,\textquotedblright{} but the business description or metadata would be \textquotedblleft{}The last, family, or surname of the customer.\textquotedblright{}
 

\item{} In document management, the document metadata is the record of who created the document and when, when it was last updated, and so forth. Failure to properly sanitize document metadata has led to various privacy and data security related issues.
 

\item{} In telephony,  \textquotedblleft{}data\textquotedblright{} is the actual call signal \textemdash{} the audio of the phone conversation, nowadays usually digitally encoded. Metadata on the other hand is all the information about the call: from who to who, when, how long, and so forth.
 
\end{itemize}
 
In computer systems, metadata can be difficult to isolate. Sometimes, computing professionals will speak of a \textquotedblleft{}metadata\textquotedblright{} layer that may define physical database structures, data extracts, business process behavior, even file locations. The trouble is, from a computer's point of view, a processing instruction is an instruction, and the prefix \textquotedblleft{}meta\textquotedblright{} has no real meaning.
 
Because of this, this book favors a principle that \textbf{metadata is by definition non-{}runtime.} It is documentation, usually represented as structured or semi-{}structured data, but not usually a primary processing input or output. It might be \textquotedblleft{}digital exhaust\textquotedblright{} -{} log files are a form of metadata. It is not executable. If it's  executable (directly or indirectly), it's digital logic or configuration, plain and simple.
 
So what about our infrastructure as code example? The artifact -{} the configuration file, the script -{} is NOT metadata, because it is executable. But the source repository commit IS metadata. It has no meaning for the script. The dependency is one way -{} without the artifact, the commit ID is meaningless, but the artifact is completely ignorant of the commit. The commit may become an essential data point for human beings trying to make sense of the state of a resource defined by that artifact. However, the version control system \ldots{}\hspace{0em}
 
\emph{doesn't care why files are changing. That is, the content of the changes doesn't matter. As the developer, you might move a function from here to there and expect this to be handled as one unitary move. But you could, alternatively, commit the removal and then later commit the addition. Git doesn't care. It has nothing to do with the semantics of what is in the files} \hyperlink{Loeliger2009}{[Loeliger2009]}.
 
\textbf{In this microcosm, we see the origins of IT management.} It is not always easy to apply this approach in practice. There can be edge cases. Documentation stored in version control needs to be seen as "executable" in the context of the business process. But it too does not require or "know about" the comit. Ultimately \textbf{the concept of metadata provides a basis for distinguishing the \emph{management} of information technology from the actual \emph{practice} of information technology.}
   
