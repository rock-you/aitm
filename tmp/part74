\subsection{Advanced topics in operations}
\label{_advanced_topics_in_operations}\hyperlabel{_advanced_topics_in_operations}%
  
\subsubsection{Site reliability engineering at Google}
\label{_site_reliability_engineering_at_google}\hyperlabel{_site_reliability_engineering_at_google}%
  \begin{quote}

SRE is what happens when you ask a software engineer to design an operations team.

\hspace*\fill--- Benjamin Treynor Sloss
\emph{in Beyer/Site Reliability Engineering} \end{quote}
 
Site reliability engineering is a new term for operations-{}centric work, originating from Google and other large digital organizations. It is clearly an operational discipline; the SRE team is responsible for the "availability, latency, performance, efficiency, change management, monitoring, emergency response, and capacity planning of their service" \hyperlink{Beyer2016}{[Beyer2016]}, p.7.
 
Google site reliability engineers have strong technical backgrounds, frequently computer science, which is atypical for operations staff in the traditional IT industry. SREs are strongly incented to automate as much as possible, avoiding "toil" (i.e., repetitive, non-{}value-{}add tasks.) In other words, as Benjamin Sloss says, "we want systems that are automatic, not just automated" \hyperlink{Beyer2016}{[Beyer2016]}.
 
Google has pioneered a number of innovative practices with its SRE team, including:
 \begin{itemize}

\item{} a 50\% cap on aggregate "ops" work -{} the other 50\% is supposed to be spent on development
 

\item{} the concept of an "error budget" as a control mechanism -{} teams are incented not for "zero downtime" but rather to take the risk and spend the error budget
 

\item{} "Release Engineer" as a specific job title for those focused on building and maintaining the delivery \hyperlink{pipeline}{pipeline}.
 
\end{itemize}
 
The 2016 book \href{https://www.goodreads.com/book/show/27968891-site-reliability-engineering}{\emph{Site Reliability Engineering: How Google Runs Production Systems}} is highly recommended.
   
