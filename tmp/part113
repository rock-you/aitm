\section{Special section: The IT lifecycles}
\label{_special_section_the_it_lifecycles}\hyperlabel{_special_section_the_it_lifecycles}%
  
We've discussed products and the various ways digital organizations deliver them, from simple work management to more sophisticated project and process management approaches. Now, we need to refine our understanding of the products themselves and how they are managed.
 
We previously discussed the relationship between \hyperlink{feature-v-component}{feature versus component teams} in chapter 4. In chapter 9, we touched on the idea of \hyperlink{shared-services}{shared services} teams.  Both of these ideas are now expanded into what is called the "four lifecycle model."
 
The four lifecycle model was first documented in \hyperlink{Betz2011a}{[Betz2011a]}. The four lifecycles are:
 \begin{itemize}

\item{} The Application Service lifecycle
 

\item{} The Infrastructure Service lifecycle
 

\item{} The Asset lifecycle
 

\item{} The Technology Product lifecycle
 
\end{itemize}
 
Each of these lifecycles reflects the existence of a significant concept, that is managed over time, as a portfolio. (More on IT portfolio management practices in Chapter 10.)
 
First, bear in mind that services are equivalent to products. Digital value is usually delivered as a service, and therefore shares standard service characteristics from an academic perspective, including the idea that services are produced and consumed simultaneously (e.g. an account lookup) and are perishable (a computer's idle time cannot be recovered if it goes unused).
 
The first two concepts (Application and Infrastructure Service) below reflect these characteristics; the second two (Asset and Technology Product) do not.
 
An \textbf{Application Service} is a business or market-{}facing product, consumed by people whose primary activities are \textbf{not} defined by an interest in \hyperlink{what-is-IT}{information technology}: for example, a bank customer lookiing up her account balance, or an Accounts Payable systems operator. In terms of "feature versus component," the concept of Application is more aligned to "feature." An example would include an Online Banking system or a Payroll system.
 
The \textbf{Application Service Lifecycle} is the end to end existence of such a systems, from \hyperlink{service-lifecycle}{idea to retirement}. In general, the realization such a system is needed originates \textbf{externally} to the IT capability (regardless of its degree of centralization.) Software as a Service usage is also tracked here.
 
An \textbf{Infrastructure Service} is, by contrast and as \hyperlink{what-is-IT-infrastructure}{previously discussed}, a digital or IT service primarily of interest to other digital or IT services/products. Its lifecycle is similar to that of the application service, except that the user is some other IT service. An example would be a Storage Area Network system managed as a service, or the integrated networking system required for connectivity in a data center. Platform and Infrastructure as a Service is also tracked here.
 
Note that in terms of our \hyperlink{shared-services}{service definition discussion}, the above lifecycle concepts are service \textbf{systems}. The lifecycle of service offerings is a business lifecycle having more to do with go to market strategy on the part of the firm. We covered this to some extent in Chapter 4 and will revisit it in Chapter 12.
 
An \textbf{Asset} is a valuable, tangible investment of organizational resources that is tracked against loss or misuse, and optimized for value over time. It can sit unused and still have some value. Examples would include a physical server or other device, or a commercial software license. Whether assets can be virtual is a subject of debate and specific to the organization's management objectives (Given the licensing implications of virtual servers, treating them as assets is not uncommon.)
 
The \textbf{Asset Lifecycle} is distinct from the service lifecycles, following a rough order including standard supply chain activities:
 \begin{itemize}

\item{} Forecast
 

\item{} Requisition
 

\item{} Request quote
 

\item{} Order
 

\item{} Deliver
 

\item{} Accept
 

\item{} Install/configure
 

\item{} Operate
 

\item{} Dispose
 
\end{itemize}
 
A contract reserving Cloud capacity is also an Asset.
 
\label{tech-prod-lifecycle}\hyperlabel{tech-prod-lifecycle}
 
Finally, a \textbf{Technology Product} is a \textbf{class} of Assets, the "type" to the Asset "instance." For example, the enterprise might select the Oracle relational database as a standard Technology Product. It might then purchase 10 licenses, which are Assets.
 
The \textbf{Technology Product Lifecycle} is also distinct from both the Service and Asset lifecycles:
 \begin{itemize}

\item{} Identify technical requirement or need
 

\item{} Evaluate options
 

\item{} Select product (may kick off Asset Lifecycle)
 

\item{} Specify acceptable use
 

\item{} Maintain vendor relationship
 

\item{} Maintain product (e.g. patching and version upgrades)
 

\item{} Continuously evaluate product's fitness for purpose
 

\item{} Retire product from environment
 
\end{itemize}
 
Cloud services need to be managed in terms of what version they are and what the interoperability concerns are.
 
The challenge in digital management is "lining up the lifecycles" so that transactional value flows across them.
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/4_00-multilifecycle.png}{{\imgevalsize{images/4_00-multilifecycle.png}{\includegraphics[width=0.48\textwidth]{images/4_00-multilifecycle.png}}}}{multi lifecycle problem}
\end{center}
\caption[{Multiple lifecycle model }]{Multiple lifecycle model \footnotemark{}}
\end{wrapfigure}
 
This can be very difficult, as each lifecycle has a logic of its own, and there may be multiple interdependencies. A technology product may come to the end of its market life and drive expensive changes up the stack. Conversely, new application requirements may expose deficiencies in the underlying stack, again requiring expensive remediation. Technology product vulnerabilities can prove disruptive, and the asset lifecycle (representing either physical depreciation and refresh cycles, or time-{}bound licensing) is a significant cost driver.
 
These lifecycles are essential to all of the next 3 chapters.
 \begin{itemize}

\item{} In Chapter 10, they represent focal points for risk and control
 

\item{} In Chapter 11, we will see how enterprise information management depends on their management
 

\item{} In Chapter 12, we will further discuss how they are managed in terms of architecture and portfolio.
 
\end{itemize}
 
\label{gov-chap}\hyperlabel{gov-chap}
  
