\subsection{IT versus product organization}
\label{_it_versus_product_organization}\hyperlabel{_it_versus_product_organization}%
  \begin{quote}

In the early stages, you have to hire generalists who are both willing and able to take on dozens of tasks at once. Your developers will have to speak with potential customers; your accountants will have to give advice on product direction; and the born salesman on your team will need to put the phone down a few hours a day and set up a new employee's computer. This is the exciting, four-{}people-{}and-{}an-{}idea stage popularly associated with startups\textemdash{} but it doesn't last very long.  For a lot of your employees, growing out of this phase will be a welcome development: programmers don't want to be in accounting meetings, and salespeople don't want to sit in a dark, quiet room with the engineers. People have talents and skills they want to develop, and a healthy degree of specialization allows them to do that.

\hspace*\fill--- Matt Blumberg
\emph{Scaling Up} \end{quote}
 \begin{quote}

Some of the most important factors that organizational structure can affect are communication, efficiency, standards, quality, and ownership.

\hspace*\fill--- Abbot and Fisher
\emph{The Art of Scalability} \end{quote}
 
So, you are getting bigger now, and are no longer one single team. As the quote from Matt Blumberg's Scaling Up indicates, you are becoming more specialized. Even as a cohesive, single team you had specialized support services. You needed legal and accounting advice to get the startup going. When you started hiring people, you needed HR and payroll. You also are buying things and paying bills, so you need bookkeeping, and you've got sales people and marketing people and you need to support your customers and collect money they have promised to pay. At some point you need an internal person whose daily job is money (they'll become the CFO someday).
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/3_07-org-chart-whiteboard.jpg}{{\imgevalsize{images/3_07-org-chart-whiteboard.jpg}{\includegraphics[width=0.48\textwidth]{images/3_07-org-chart-whiteboard.jpg}}}}{org chart}
\end{center}
\caption[{Organization chart in progress }]{Organization chart in progress \footnotemark{}}
\end{wrapfigure}
 
How are you going to organize? More importantly, how are you going to think about organizing? This is a hard question. It's important to get organization right, and the question never goes away. As you grow and split into teams, the overall sense of mission you felt as a single team is at risk of fading. How can you keep your "eyes on the prize" when there are mulitple teams, who all see the world slightly differently? It's critical, as you start to explore various coordination mechanisms, to remember that the team remains the highest-{}value logical unit, and must be protected. As we discussed in \hyperlink{the-product-team}{Chapter 4}, product value is created by co-{}located, cross-{}functional, highly collaborative teams.
 
In keeping with our \hyperlink{emergence-model}{evolutionary approach}, let's assume you've been fairly ad-{}hoc in your organizational structure up to now, doing your best to avoid specialization. Perhaps you've even been working as a collective. Nevertheless, you've needed a variety of skills to get this far in your journey: you are certainly not all Java programmers! A critical decision you will have to make: do you want a traditional "IT vs Business" structure, or a product-{}based organization?
 
\label{fowler-quote}\hyperlabel{fowler-quote}
 \begin{quote}

When I am in business meetings, I hear people talk about digital as a function or a role. It is not. Digital is a capability that needs to exist in every job. Twenty years ago, we broke ecommerce out into its own organization, and today ecommerce is just a part of the way we work. That's where digital and IT are headed; IT will be no longer be a distinct function, it will just be the way we work. \ldots{}  [W]e've moved to a flatter organizational model with "teams of teams" who are focused on outcomes. These are colocated groups of people who own a small, minimal viable product deliverable that they can produce in 90 days. The team focuses on one piece of work that they will own through its complete lifecycle\ldots{}in [the \textquotedblleft{}back office\textquotedblright{}] model, the CIO controls infrastructure, the network, storage, and makes the PCs run. The CIOs who choose to play that role will not be relevant for long\ldots{} \hyperlink{Heller2016}{[Heller2016]}

\hspace*\fill--- Jim Fowler
\emph{General Electri  Chief Information Officer} \end{quote}
 
There are two major models that digital professionals may encounter in their career:
 \begin{itemize}

\item{} The traditional centralized back-{}office "IT" organization
 

\item{} Digital technology as a component of market-{}facing product management
 
\end{itemize}
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/3_07-file-cabinets.jpg}{{\imgevalsize{images/3_07-file-cabinets.jpg}{\includegraphics[width=0.48\textwidth]{images/3_07-file-cabinets.jpg}}}}{filing cabinets}
\end{center}
\caption[{Paper filing system }]{Paper filing system \footnotemark{}}
\end{wrapfigure}
 
The traditional IT organization started decades ago, with "back-{}office" goals like replacing file clerks and filing cabinets with faster and more accurate computers. (We will go into further detail in \hyperlink{paper-to-digital}{Chapter 11}.) At that time, computers were not flexible or reliable, business did not move as fast, and there was a lot of value to be gained in relatively simple efforts like converting massive paper filing systems into digital systems. As these kinds of efforts grew and became critical operational dependencies for companies, the role of Chief Information Officer was created, to head up increasingly large organizations of application developers, infrastructure engineers, and operations staff.
 
The business objectives for such organizations centered on stability and efficiency. Replacing 300 file clerks with a system that didn't work, or that wound up costing \textbf{more} was obviously not a good business outcome! On the other hand, it was generally accepted that designing and implementing these systems would take some time. They were complex and many times the problem had never been solved before. New systems might take years\hspace{0.167em}\textemdash{}\hspace{0.167em}including delays\hspace{0.167em}\textemdash{}\hspace{0.167em}to come online, and while executives might be unhappy, oftentimes the competition wasn't doing much better. CIOs were conditioned to be risk-{}averse; if systems were running, changing them was scrutinized with great care and rarely rushed.
 
The culture and practices of the modern IT organization became more established, and while it retained a reputation for being slow, expensive, and inflexible, no-{}one seemed to have any better ideas. It didn't hurt that the end customer wasn't interested in computers.
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/3_07-early-Amazon.jpg}{{\imgevalsize{images/3_07-early-Amazon.jpg}{\includegraphics[width=0.48\textwidth]{images/3_07-early-Amazon.jpg}}}}{early Amazon appearance}
\end{center}
\caption[{Amazon early version }]{Amazon early version \footnotemark{}}
\end{wrapfigure}
 
Then along came Apple, Microsoft, and the dot-{}com boom. Suddenly everyone had personal computers at home, and was on the Internet. Buying things! Computers continued to become more reliable and powerful as well. Companies realized that their back-{}office IT organizations were not able to move fast enough to keep up with the new e-{}commerce challenge, and in many cases organized their Internet team \textbf{outside} of the CIO's control (which sometimes made the traditional IT organization very unhappy). Silicon valley startups such as Google and Facebook in general did not even have a separate "CIO" organization, because for them (and this is a critical point)  \textbf{the digital systems \emph{were} the product.} Going to market against tough competitors (Alta Vista and Yahoo against Google, Friendster and MySpace against Facebook) wasn't a question of maximizing efficiency. It was about product innovation and effectiveness, and taking appropriate risks in the quest for these rapidly growing new markets.
 
\label{trad-cio-org}\hyperlabel{trad-cio-org}
 
Let's go back to our example of the traditional CIO organization. A typical structure under the CIO might look like this:
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/3_07-classic-org.png}{{\imgevalsize{images/3_07-classic-org.png}{\includegraphics[width=0.48\textwidth]{images/3_07-classic-org.png}}}}{org chart}
\end{center}
\caption{Classic IT organization}
\end{wrapfigure}
 
(We had some related discussion in \hyperlink{i-o-matrix}{Chapter 6}.) Such a structure was perceived to be "efficient" because all the server engineers would be in one organization, while all the Java developers would be in another, and their utilization could be managed for efficiency. Overall, having all the "IT" people together was also considered efficient, and the general idea was that "the business" (Sales, Marketing, Operations, and back-{}office functions like Finance and HR) would define their \hyperlink{system-intent}{"requirements"} and the IT organization would deliver systems in response. It was believed that organizing into "centers of excellence" (sometimes called \emph{organizing by function}) would make the practices of each center more and more effective, and therefore more valuable to the organization as a whole. However, the new digital organizations perceived that there was too much friction between the different functions on the organization chart. Skepticism also started to emerge that "centers of excellence" were living up to their promise. Instead, what was too often seen was the emergence of an "us versus them" mentality, as developers argued with server and network engineers.
 
One of the first companies to try a completely different approach was Intuit. As Intuit started selling its products increasingly as services, it re-{}organized to divide infrastructure individual contributors, e.g. storage engineers and database administrators, to become part of the product teams with which they worked \hyperlink{Abbott2015}{[Abbott2015]}, p 103.
 
\label{spotify-model}\hyperlabel{spotify-model}
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/3_07-neworg.png}{{\imgevalsize{images/3_07-neworg.png}{\includegraphics[width=0.48\textwidth]{images/3_07-neworg.png}}}}{org chart}
\end{center}
\caption{New IT organization}
\end{wrapfigure}
 
This model is also called the "Spotify model." The dotted line boxes (Developers, Quality Assurance, Engineering) are no longer dedicated "centers of excellence" with executives leading them. Instead, they are lighter-{}weight "communities of interest" organized into chapters and guilds. The cross-{}functional product teams are the primary way work is organized and understood, and the communities of interest play a supporting role. Henrik Kniberg provided one of the first descriptions of how Spotify organizes along product lines  \hyperlink{Kniberg2012}{[Kniberg2012]}. (Attentive readers will ask, "What happened to the PMO? and what about security?" There are various answers to these questions, which we will continue to explore in Part III.)
 
The consequences of this transition in organizational style are still being felt and debated. Sriram Narayan, in his book \emph{Agile Organization Design} (\hyperlink{Narayam2015}{[Narayam2015]}), points out that "IT work is labor-{}intensive and highly specialized," and therefore managing IT talent is a particular organizational capability it may not make sense to distribute. Furthermore, he observes that IT work is performed on medium to long time scales, and  "IT culture" differs from "business culture."
 
Conversely, Abbott and Fisher in \emph{The Art of Scalability} argue that "\ldots{}\hspace{0em}The difference in mindset, organization, metrics, and approach between the IT and product models is vast. Corporate technology governance tends to significantly slow time to market for critical projects\ldots{}\hspace{0em}IT mindsets are great for internal technology development, but disastrous for external product development" \hyperlink{Abbott2015}{[Abbott2015]} pp 122-{}124. However, it is possible that Abbott and Fisher are overlooking the \hyperlink{trad-IT-decline}{decline of traditional IT}. Hybrid models exist, with "product" teams reporting up under "business" executives, and the CIO still controlling the delivery staff who may be co-{}located with those teams. We'll discuss the alternative models in more detail below.
 

\begin{sidebar}
\textbf{Conway's law}


So who was Conway and why is his law so important as we move to a team of teams? Melvin Conway is a computer programmer who worked on early compilers and programming languages. In 1967 he proposed the thesis that:

\emph{Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization's communication structure} \hyperlink{Conway1968}{[Conway1968]}.

What does this mean? If we establish two teams, each team will build a piece of functionality (a feature or component). They will think in terms of "our stuff" and "their stuff" and the interactions (or \emph{interface}) between the two. Perhaps this seems obvious, but as you scale up it's critical to keep in mind. In particular, as you segment your organization along the \hyperlink{AKF-cube}{AKF y-{}axis}, you will need to keep in mind the difference between features and components. You are on a path to have dozens or hundreds of such teams. The decisions you make today on how to divide functionality and work will determine your operating model far into the future.

Ultimately, Conway's law tells us that to design a product is also to design an organization, and vice versa. Important for designers and architects to remember.
\end{sidebar}
  
