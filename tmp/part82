\subsection{Demand, supply, and execution}
\label{_demand_supply_and_execution}\hyperlabel{_demand_supply_and_execution}%
  \begin{quote}

execution (n.) 14c., "a carrying out, a putting into effect; enforcement; performance (of a law, statute, etc.), the carrying out (of a plan, etc.)," from Anglo-{}French execucioun (late 13c.), Old French execucion "a carrying out" (of an order, etc.), from Latin executionem (nominative executio) "an accomplishing," noun of action from past participle stem of exequi/exsequi "to follow out" (see execute).

\hspace*\fill--- Online Etymology Dictionary
\end{quote}
 
In order to understand the concept of execution, we need to think about supply versus demand. Think about the kinds of demand described above. Each form of demand implies some kind of supply to meet it. For example, the demand that an automated transaction be executed requires the supply of appropriate computing capacity at the necessary place and time. The demand that a new story be supported as part of a software product feature requires the supply of a software development team's time and attention. And a major product or project requires the supply perhaps of many teams as well as other resources (hardware and software assets, for example).
 
In the \hyperlink{betz-org-scale-cube}{Betz organization scaling cube}, work and execution converges to the origin at front lower left. An alternate view that helps us describe the chapter structure is with the convergence point at the top of a pyramid. This rotated approach is compatible with the \hyperlink{dual-axis-vc}{dual-{}axis value chain}.
 \begin{wrapfigure}{r}{0.5\textwidth}

\begin{center}
\imgexists{images/3_01-DSE.png}{{\imgevalsize{images/3_01-DSE.png}{\includegraphics[width=0.48\textwidth]{images/3_01-DSE.png}}}}{dse model}
\end{center}
\caption{Demand-{}supply-{}execute model}
\end{wrapfigure}
 
Bottom to top, this diagram tells a story of demand and supply as they progress through increasingly refined understandings to the specific execution of work and delivery of value.
 
We have markets and regulations, which define and constrain the potential demand for the digital product. Markets are met with capital funding, human resources, strategies and product offerings, which lead to programs of work, projects, and platform decisions. These in turn lead to identifying \hyperlink{system-intent}{user stories}, writing software, configuring platforms, and executing changes, service requests and work tasks.
 
That finer and finer grained demand stream converges with a finer and finer grained supply stream. Large blocks of capital are translated into strategic technology choices and vendor relationships, organizational structures and investments in skilled people. More detailed budgets and planning culminate ultimately in the availability of people, hardware, and software for given assignments, e.g, an empty slot on a \hyperlink{kanban}{Kanban} board. The journey can start anywhere, with a large block of traditionally managed programmatic capital or a small round of seed funding translated directly into a \hyperlink{amazon-productization}{two-{}pizza team} with maximum autonomy, which then grows and leads to  larger investments.
 
Ultimately the deployed IT service system is available for fulfilling transactional \hyperlink{what-is-IT-value}{service demand} which can be measured in terms of quality, availability and performance. Execution, in this model, is defined as \emph{the irrevocable combination of demand with supply}. The gap between the legs of the V is filled with the "Fog of Forecasting." With the lower level, larger grained abstractions it is more difficult to understand demand and supply, especially when product development (e.g. novel software engineering) is involved. (Understanding the opportunities of large grained demand and matching those with significant supply is strategy.) As demand and supply converge to the point of execution, a finer and finer grained awareness is created of the impending work and whether it is likely to be successful -{} that is, if demand will effectively and efficiently be paired with supply.
 
Notice how the fog lifts as you get closer to actual execution. The closer we get to the point of execution, the better understanding we have of team and individual level assignments across all queues and Kanban slots or their equivalent (e.g. assigned and accepted work orders). Ultimately the demand represents the usage of the automated digital system's capacity. Notice that in terms of the \hyperlink{betz-org-scale-cube}{Betz cube} z-{}axis, we still can have high variability at the point of execution, if we are considering a system executing many forms of work. In other words, surprises can happen at any time.
  
